{"version":3,"sources":["components/atoms/dropdown.js","components/atoms/image.js","components/molecules/out-for-delivery-time.js","components/molecules/delivery-information.js","components/atoms/icon.js","components/atoms/text.js","components/atoms/link.js","components/molecules/common/delivery-option.js","components/molecules/delivery-rescheduler.js","components/molecules/delivery-notes.js","components/organisms/delivery-header.js","data/location-mocks.js","components/molecules/delivery-address.js","components/molecules/delivery-notification.js","components/organisms/delivery-footer.js","components/molecules/google-map.js","App.js","index.js"],"names":["Dropdown","places","onChange","dropdownClass","className","name","map","place","value","key","Image","url","altName","imageClass","alt","src","OutForDeliveryTime","from","to","id","DeliveryInformation","process","library","add","fas","far","faClock","faPencilAlt","faMapMarkerAlt","faCommentAlt","faQuestion","Icon","isFar","isSmall","iconClass","size","icon","Text","text","subtext","textClass","Link","link","linkClass","DeliveryOption","icons","onClick","deliveryOptionClass","DeliveryRescheduler","DeliveryNotes","DeliveryHeader","defaultLocation","lat","lng","postcodeMap","placesList","Object","keys","DeliveryAddress","selectedPlace","DeliveryNotification","DeliveryFooter","GoogleApiWrapper","apiKey","google","position","zoom","initialCenter","center","zoomControl","rotateControl","scaleControl","mapTypeControl","streetViewControl","fullscreenControl","Geocode","setApiKey","setLanguage","enableDebug","App","dropdown","useState","placeName","setPlaceName","selectedLocation","setSelectedLocation","useEffect","document","getElementsByClassName","mapLoader","setInterval","ReactDOM","render","getElementById","reLoadMap","clearInterval","e","style","display","target","fromAddress","then","response","results","geometry","location","error","console"],"mappings":"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","file":"static/js/main.101da9c5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Dropdown = ({ places, onChange, dropdownClass }) => (\n  <select className={dropdownClass} name=\"place\" onChange={onChange}>\n    {places.map(place => (\n      <option value={place} key={place}>\n        {place}\n      </option>\n    ))}\n  </select>\n);\n\nexport default Dropdown;\n","import React from \"react\";\n\nconst Image = ({ url, altName, imageClass }) => (\n  <img className={imageClass} alt={altName} src={url} />\n);\n\nexport default Image;\n","import React from \"react\";\n\nconst OutForDeliveryTime = ({ from, to }) => (\n  <div id=\"out-for-delivery\">\n    <div id=\"out-for-delivery__label\">Out for delivery</div>\n    <div id=\"out-for-delivery__time\">{`${from} - ${to}`}</div>\n  </div>\n);\n\nexport default OutForDeliveryTime;\n","import React from \"react\";\n\nimport Image from \"../atoms/image\";\nimport OutForDeliveryTime from \"./out-for-delivery-time\";\n\nconst baseUrl = process.env.PUBLIC_URL;\n\nconst DeliveryInformation = () => (\n  <div id=\"delivery-information\">\n    <Image\n      url={`${baseUrl}/images/fedEx-logo.png`}\n      altName=\"FedEx logo\"\n      imageClass=\"company-logo-style\"\n    />\n    <OutForDeliveryTime from=\"13:30\" to=\"14:40\" />\n  </div>\n);\n\nexport default DeliveryInformation;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  fas,\n  faClock,\n  faPencilAlt,\n  faMapMarkerAlt,\n  faCommentAlt,\n  faQuestion\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n  fas,\n  far,\n  faClock,\n  faPencilAlt,\n  faMapMarkerAlt,\n  faCommentAlt,\n  faQuestion\n);\n\nconst Icon = ({ name, isFar, isSmall, iconClass }) => (\n  <div className=\"icon-container\">\n    <FontAwesomeIcon\n      size={isSmall ? \"xs\" : \"2x\"}\n      className={`${iconClass} ${isSmall ? \"question-mark-icon\" : \"\"}`}\n      icon={[isFar ? \"far\" : \"fas\", name]}\n    />\n  </div>\n);\n\nexport default Icon;\n","import React from \"react\";\n\nconst Text = ({ text, subtext, textClass }) => (\n  <div className={`${textClass} ${subtext ? \"\" : \"one-line-height\"}`}>\n    <div>{text}</div>\n    {subtext && <div className=\"subText\">{subtext}</div>}\n  </div>\n);\n\nexport default Text;\n","import React from \"react\";\n\nconst Link = ({ link, linkClass }) => <div className={linkClass}>{link}</div>;\n\nexport default Link;\n","import React from \"react\";\n\nimport Icon from \"../../atoms/icon\";\nimport Text from \"../../atoms/text\";\nimport Link from \"../../atoms/link\";\n\nconst DeliveryOption = ({\n  icons,\n  text,\n  subtext,\n  link,\n  onClick,\n  deliveryOptionClass\n}) => (\n  <div className={`delivery-option ${deliveryOptionClass}`} onClick={onClick}>\n    {icons &&\n      icons.map(({ name, isFar, isSmall }) => (\n        <Icon\n          iconClass=\"delivery-option__icon\"\n          key={name}\n          name={name}\n          isFar={isFar}\n          isSmall={isSmall}\n        />\n      ))}\n\n    {text && (\n      <Text\n        text={text}\n        subtext={subtext}\n        textClass=\"delivery-option__text-container\"\n      />\n    )}\n\n    {link && <Link link={link} linkClass=\"delivery-option__link\" />}\n  </div>\n);\n\nexport default DeliveryOption;\n","import React from \"react\";\n\nimport DeliveryOption from \"./common/delivery-option\";\n\nconst DeliveryRescheduler = () => (\n  <DeliveryOption\n    icons={[{ name: \"clock\", isFar: true }]}\n    text=\"Not in?\"\n    link=\"Find a better time\"\n  />\n);\n\nexport default DeliveryRescheduler;\n","import React from \"react\";\n\nimport DeliveryOption from \"./common/delivery-option\";\n\nconst DeliveryNotes = () => (\n  <DeliveryOption\n    icons={[{ name: \"pencil-alt\", isFar: false }]}\n    text=\"Add delivery notes\"\n  />\n);\n\nexport default DeliveryNotes;\n","import React from \"react\";\n\nimport DeliveryInformation from \"../molecules/delivery-information\";\nimport DeliveryRescheduler from \"../molecules/delivery-rescheduler\";\nimport DeliveryNotes from \"../molecules/delivery-notes\";\n\nconst DeliveryHeader = () => (\n  <div id=\"delivery-header\">\n    <DeliveryInformation />\n    <DeliveryRescheduler />\n    <DeliveryNotes />\n  </div>\n);\n\nexport default DeliveryHeader;\n","// the Eiffel tower\nconst defaultLocation = {\n  lat: 48.858608,\n  lng: 2.294471\n};\n\nconst postcodeMap = {\n  \"Eiffel Tower\": \"75007 Paris, France\",\n  \"Great Wall of China\": \"Huairou, China\",\n  \"Leaning Tower of Pisa\": \"56126 Pisa Pl, Italy\",\n  \"Pyramid of Giza\": \"Giza Governorate, Egypt\",\n  \"Sydney Opera House\": \"Sydney NSW 2000, Australia\",\n  \"Statue of Liberty\": \"New York, NY 10004, USA\",\n  \"Taj Mahal\": \"Uttar Pradesh 282001, India\",\n  \"Machu Picchu\": \"08680, Peru\",\n  \"Wembley arena\": \"London HA9 0AA, UK\"\n};\n\nconst placesList = Object.keys(postcodeMap);\n\nexport { defaultLocation, postcodeMap, placesList };\n","import React from \"react\";\n\nimport DeliveryOption from \"./common/delivery-option\";\nimport { postcodeMap } from \"../../data/location-mocks\";\n\nconst DeliveryAddress = ({ selectedPlace, onClick }) => (\n  <DeliveryOption\n    onClick={onClick}\n    icons={[{ name: \"map-marker-alt\", isFar: false }]}\n    text={selectedPlace}\n    subtext={postcodeMap[selectedPlace]}\n    deliveryOptionClass=\"delivery-address\"\n  />\n);\n\nexport default DeliveryAddress;\n","import React from \"react\";\n\nimport DeliveryOption from \"./common/delivery-option\";\n\nconst DeliveryNotification = () => (\n  <DeliveryOption\n    icons={[\n      { name: \"comment-alt\", isFar: true },\n      { name: \"question\", isFar: false, isSmall: true }\n    ]}\n    text=\"Get notified instantly\"\n    link=\"Enable\"\n  />\n);\n\nexport default DeliveryNotification;\n","import React from \"react\";\n\nimport DeliveryAddress from \"../molecules/delivery-address\";\nimport DeliveryNotification from \"../molecules/delivery-notification\";\n\nconst DeliveryFooter = ({ selectedPlace, onClick }) => (\n  <div id=\"delivery-footer\">\n    <DeliveryAddress selectedPlace={selectedPlace} onClick={onClick} />\n    <DeliveryNotification />\n  </div>\n);\n\nexport default DeliveryFooter;\n","import React from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\n\nconst baseUrl = process.env.PUBLIC_URL;\n\nexport const MapContainer = ({ google, position }) => (\n  <Map\n    //   mapTypeId={\"terrain\"}\n    google={google}\n    zoom={16}\n    className=\"delivery-map\"\n    initialCenter={position}\n    center={position}\n    zoomControl={false}\n    rotateControl={false}\n    scaleControl={false}\n    mapTypeControl={false}\n    streetViewControl={false}\n    fullscreenControl={false}\n  >\n    <Marker\n      name={\"delivery address\"}\n      position={position}\n      icon={`${baseUrl}/images/custom-blue-dot-marker.png`}\n    />\n  </Map>\n);\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_MAP_API_KEY\n})(MapContainer);\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Geocode from \"react-geocode\";\n\nimport DropDown from \"./components/atoms/dropdown\";\nimport DeliveryHeader from \"./components/organisms/delivery-header\";\nimport DeliveryFooter from \"./components/organisms/delivery-footer\";\nimport GoogleMap from \"./components/molecules/google-map\";\n\nimport { defaultLocation, placesList } from \"./data/location-mocks\";\n\nGeocode.setApiKey(process.env.REACT_APP_GOOGLE_MAP_API_KEY);\nGeocode.setLanguage(\"en\");\nGeocode.enableDebug();\n\nconst reLoadMap = selectedLocation =>\n  ReactDOM.render(\n    <GoogleMap position={selectedLocation} />,\n    document.getElementById(\"map-id\")\n  );\n\nconst App = () => {\n  const [placeName, setPlaceName] = useState(placesList[0]);\n  const [selectedLocation, setSelectedLocation] = useState(defaultLocation);\n  let dropdown;\n\n  const onChange = e => {\n    dropdown.style.display = \"none\";\n    setPlaceName(e.target.value);\n    Geocode.fromAddress(e.target.value).then(\n      response => {\n        const { lat, lng } = response.results[0].geometry.location;\n        setSelectedLocation({ lat: lat, lng: lng });\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  };\n\n  useEffect(() => {\n    dropdown = document.getElementsByClassName(\"place-selector\")[0];\n    // an addevent listener instead?\n    const mapLoader = setInterval(() => {\n      reLoadMap(selectedLocation);\n    }, 1000);\n\n    return () => {\n      clearInterval(mapLoader);\n    };\n  });\n\n  const showDropdown = () => {\n    dropdown.style.display = \"block\";\n  };\n\n  return (\n    <div>\n      <div id=\"map-id\"></div>\n      <DeliveryHeader />\n      <div id=\"desktop-filler__container\">\n        <div id=\"desktop-filler__fill\"></div>\n      </div>\n      <DropDown\n        places={placesList}\n        onChange={onChange}\n        dropdownClass=\"place-selector\"\n      />\n      <DeliveryFooter onClick={showDropdown} selectedPlace={placeName} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/css/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}